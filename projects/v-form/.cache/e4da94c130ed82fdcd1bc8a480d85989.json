{"dependencies":[{"name":"/home/ridho/Documents/kitabisa/v-form/package.json","includedInParent":true,"mtime":1530613268754},{"name":"/home/ridho/Documents/kitabisa/v-form/.babelrc","includedInParent":true,"mtime":1530607776115}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar typeValidators = {\n    isNumber: function isNumber(value) {\n        var num = Number(value);\n        if (typeof num === 'number' && !isNaN(num) && typeof value !== 'boolean') {\n            return true;\n        }\n\n        return false;\n    },\n    isFunction: function isFunction(functionToCheck) {\n        return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n    }\n};\n\nexports.default = typeValidators;","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"plugins/type.js","original":{"line":1,"column":0}},{"name":"typeValidators","generated":{"line":6,"column":4},"source":"plugins/type.js","original":{"line":1,"column":6}},{"generated":{"line":6,"column":21},"source":"plugins/type.js","original":{"line":1,"column":23}},{"name":"isNumber","generated":{"line":7,"column":0},"source":"plugins/type.js","original":{"line":2,"column":4}},{"generated":{"line":7,"column":14},"source":"plugins/type.js","original":{"line":2,"column":14}},{"name":"value","generated":{"line":7,"column":32},"source":"plugins/type.js","original":{"line":2,"column":23}},{"generated":{"line":7,"column":37},"source":"plugins/type.js","original":{"line":2,"column":14}},{"generated":{"line":7,"column":39},"source":"plugins/type.js","original":{"line":2,"column":30}},{"generated":{"line":8,"column":0},"source":"plugins/type.js","original":{"line":3,"column":8}},{"name":"num","generated":{"line":8,"column":12},"source":"plugins/type.js","original":{"line":3,"column":14}},{"name":"Number","generated":{"line":8,"column":18},"source":"plugins/type.js","original":{"line":3,"column":20}},{"name":"value","generated":{"line":8,"column":25},"source":"plugins/type.js","original":{"line":3,"column":27}},{"generated":{"line":8,"column":30},"source":"plugins/type.js","original":{"line":3,"column":20}},{"generated":{"line":8,"column":31},"source":"plugins/type.js","original":{"line":3,"column":8}},{"generated":{"line":9,"column":0},"source":"plugins/type.js","original":{"line":4,"column":8}},{"generated":{"line":9,"column":12},"source":"plugins/type.js","original":{"line":5,"column":12}},{"name":"num","generated":{"line":9,"column":19},"source":"plugins/type.js","original":{"line":5,"column":19}},{"generated":{"line":9,"column":22},"source":"plugins/type.js","original":{"line":5,"column":12}},{"generated":{"line":9,"column":27},"source":"plugins/type.js","original":{"line":5,"column":27}},{"generated":{"line":9,"column":35},"source":"plugins/type.js","original":{"line":5,"column":12}},{"generated":{"line":9,"column":39},"source":"plugins/type.js","original":{"line":6,"column":12}},{"name":"isNaN","generated":{"line":9,"column":40},"source":"plugins/type.js","original":{"line":6,"column":13}},{"name":"num","generated":{"line":9,"column":46},"source":"plugins/type.js","original":{"line":6,"column":19}},{"generated":{"line":9,"column":49},"source":"plugins/type.js","original":{"line":6,"column":13}},{"generated":{"line":9,"column":50},"source":"plugins/type.js","original":{"line":5,"column":12}},{"generated":{"line":9,"column":54},"source":"plugins/type.js","original":{"line":7,"column":12}},{"name":"value","generated":{"line":9,"column":61},"source":"plugins/type.js","original":{"line":7,"column":19}},{"generated":{"line":9,"column":66},"source":"plugins/type.js","original":{"line":7,"column":12}},{"generated":{"line":9,"column":71},"source":"plugins/type.js","original":{"line":7,"column":29}},{"generated":{"line":9,"column":80},"source":"plugins/type.js","original":{"line":4,"column":8}},{"generated":{"line":9,"column":82},"source":"plugins/type.js","original":{"line":8,"column":10}},{"generated":{"line":10,"column":0},"source":"plugins/type.js","original":{"line":9,"column":12}},{"generated":{"line":10,"column":19},"source":"plugins/type.js","original":{"line":9,"column":19}},{"generated":{"line":10,"column":23},"source":"plugins/type.js","original":{"line":9,"column":12}},{"generated":{"line":11,"column":0},"source":"plugins/type.js","original":{"line":10,"column":9}},{"generated":{"line":13,"column":0},"source":"plugins/type.js","original":{"line":12,"column":8}},{"generated":{"line":13,"column":15},"source":"plugins/type.js","original":{"line":12,"column":15}},{"generated":{"line":13,"column":20},"source":"plugins/type.js","original":{"line":12,"column":8}},{"generated":{"line":14,"column":0},"source":"plugins/type.js","original":{"line":13,"column":5}},{"generated":{"line":14,"column":5},"source":"plugins/type.js","original":{"line":1,"column":23}},{"name":"isFunction","generated":{"line":15,"column":0},"source":"plugins/type.js","original":{"line":14,"column":4}},{"generated":{"line":15,"column":16},"source":"plugins/type.js","original":{"line":14,"column":16}},{"name":"functionToCheck","generated":{"line":15,"column":36},"source":"plugins/type.js","original":{"line":14,"column":25}},{"generated":{"line":15,"column":51},"source":"plugins/type.js","original":{"line":14,"column":16}},{"generated":{"line":15,"column":53},"source":"plugins/type.js","original":{"line":14,"column":42}},{"generated":{"line":16,"column":0},"source":"plugins/type.js","original":{"line":15,"column":8}},{"name":"functionToCheck","generated":{"line":16,"column":15},"source":"plugins/type.js","original":{"line":16,"column":12}},{"generated":{"line":16,"column":34},"source":"plugins/type.js","original":{"line":17,"column":12}},{"name":"toString","generated":{"line":16,"column":37},"source":"plugins/type.js","original":{"line":17,"column":15}},{"generated":{"line":16,"column":45},"source":"plugins/type.js","original":{"line":17,"column":12}},{"name":"call","generated":{"line":16,"column":46},"source":"plugins/type.js","original":{"line":17,"column":24}},{"generated":{"line":16,"column":50},"source":"plugins/type.js","original":{"line":17,"column":12}},{"name":"functionToCheck","generated":{"line":16,"column":51},"source":"plugins/type.js","original":{"line":17,"column":29}},{"generated":{"line":16,"column":66},"source":"plugins/type.js","original":{"line":17,"column":12}},{"generated":{"line":16,"column":72},"source":"plugins/type.js","original":{"line":17,"column":50}},{"generated":{"line":16,"column":91},"source":"plugins/type.js","original":{"line":15,"column":8}},{"generated":{"line":17,"column":0},"source":"plugins/type.js","original":{"line":19,"column":5}},{"generated":{"line":18,"column":0},"source":"plugins/type.js","original":{"line":1,"column":23}},{"generated":{"line":18,"column":1},"source":"plugins/type.js","original":{"line":1,"column":0}},{"name":"typeValidators","generated":{"line":20,"column":18},"source":"plugins/type.js","original":{"line":22,"column":15}}],"sources":{"plugins/type.js":"const typeValidators = {\n    isNumber: function(value) {\n        const num = Number(value)\n        if (\n            typeof num === 'number' &&\n            !isNaN(num) &&\n            typeof value !== 'boolean'\n        ) {\n            return true\n        }\n\n        return false\n    },\n    isFunction: function(functionToCheck) {\n        return (\n            functionToCheck &&\n            {}.toString.call(functionToCheck) === '[object Function]'\n        )\n    },\n}\n\nexport default typeValidators"},"lineCount":null}},"hash":"610d525db0c06242ecc13062a70f635c","cacheData":{"env":{}},"id":14}