// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Json = require("@glennsl/bs-json/src/Json.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Fetch = require("bs-fetch/src/Fetch.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Model$ReactTemplate = require("./Model.bs.js");

var component = ReasonReact.reducerComponent("Post");

function make(children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return Curry._2(children, self[/* state */1], (function (bodyData, onCompleted) {
                            return Curry._1(self[/* send */3], /* SendRequested */Block.__(0, [
                                          bodyData,
                                          onCompleted
                                        ]));
                          }));
            }),
          /* initialState */(function (param) {
              return /* Idle */0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _state) {
              if (typeof action === "number") {
                return /* Update */Block.__(0, [/* Idle */0]);
              } else if (action.tag) {
                var fn = action[1];
                var todo = action[0];
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* Idle */0,
                          (function (_self) {
                              return Curry._1(fn, todo);
                            })
                        ]);
              } else {
                var fn$1 = action[1];
                var bodyData = action[0];
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* Sending */1,
                          (function (self) {
                              fetch("http://localhost:3000/todos", Fetch.RequestInit[/* make */0](/* Post */2, {
                                                "Content-Type": "application/json"
                                              }, Caml_option.some(Json.stringify(Model$ReactTemplate.write_t(bodyData))), undefined, undefined, undefined, /* Include */2, undefined, undefined, undefined, undefined)(/* () */0)).then((function (prim) {
                                          return prim.json();
                                        })).then((function (response) {
                                        var todo = Model$ReactTemplate.read_todo_t(response);
                                        return Promise.resolve(Curry._1(self[/* send */3], /* SendSucceed */Block.__(1, [
                                                          todo,
                                                          fn$1
                                                        ])));
                                      })).catch((function (_error) {
                                      return Promise.resolve(Curry._1(self[/* send */3], /* SendFailed */0));
                                    }));
                              return /* () */0;
                            })
                        ]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
