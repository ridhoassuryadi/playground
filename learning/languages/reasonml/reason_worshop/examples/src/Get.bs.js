// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Model$ReactTemplate = require("./Model.bs.js");

var component = ReasonReact.reducerComponent("Get");

function make(onCompleted, children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* FetchRequested */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return Curry._1(children, self[/* state */1]);
            }),
          /* initialState */(function (param) {
              return /* Idle */0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _state) {
              if (typeof action === "number") {
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* Loading */1,
                          (function (self) {
                              fetch("http://localhost:3000/todos").then((function (prim) {
                                          return prim.json();
                                        })).then((function (response) {
                                        var todos = Model$ReactTemplate.read_response(response);
                                        return Promise.resolve(Curry._1(self[/* send */3], /* FetchSucceed */Block.__(0, [todos])));
                                      })).catch((function (_error) {
                                      return Promise.resolve(Curry._1(self[/* send */3], /* FetchFailed */Block.__(1, ["Fetch todos failed"])));
                                    }));
                              return /* () */0;
                            })
                        ]);
              } else if (action.tag) {
                return /* Update */Block.__(0, [/* Error */[action[0]]]);
              } else {
                var todos = action[0];
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* Loaded */2,
                          (function (_self) {
                              return Curry._1(onCompleted, todos);
                            })
                        ]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
